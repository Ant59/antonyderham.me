<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Antony Derham</title><link>https://antonyderham.me/post/</link><description>Recent content in Posts on Antony Derham</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Sat, 10 Nov 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://antonyderham.me/post/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Build a PC Guide</title><link>https://antonyderham.me/post/how-to-build-a-pc/</link><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid>https://antonyderham.me/post/how-to-build-a-pc/</guid><description>Introduction Back in 2014 when I was really into PC gaming, I ran a community website at Xydre.com. As part of the the effort to entice people to join, I wrote several guides trying to spread information on how to &amp;ldquo;get the most out of PC gaming&amp;rdquo;, including how to build your own gaming PC.
The content of this post is a copy and paste of the original article I wrote from Xydre.</description></item><item><title>Using NgRx Store Auth Token with Angular HttpInterceptor</title><link>https://antonyderham.me/post/angular-ngrx-auth-interceptor/</link><pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate><guid>https://antonyderham.me/post/angular-ngrx-auth-interceptor/</guid><description>When using NgRx store, it&amp;rsquo;s likely that you will save authentication tokens, such as a JWT, in the store. It&amp;rsquo;s also likely that you want to send this token for many different requests that require authentication. Angular 4.3 introduced HttpInterceptor. This allows for registering an interceptor that will be called upon each request where the interceptor is injected.
To mix the two concepts together requires a bit of RxJS flatMap, since the intercept method on the interceptor interface takes the request object and handler and returns an observable.</description></item><item><title>Dealing with file inputs in Angular 6</title><link>https://antonyderham.me/post/angular-file-input/</link><pubDate>Fri, 01 Jun 2018 00:00:00 +0000</pubDate><guid>https://antonyderham.me/post/angular-file-input/</guid><description>File inputs are strange. The value attribute on most inputs behaves as expected, giving the value of the field. HTML defines the value attribute on file inputs as &amp;ldquo;the path of the first file selected&amp;rdquo; (see MDN), not the file(s) itself. The selected files are found on the files attribute as a FileList. The leads to some issues with Angular when using forms. Angular has the concept of a ControlValueAccessor (default implementation).</description></item><item><title>Declarative Jenkins Docker Pipeline for Angular CLI applications</title><link>https://antonyderham.me/post/jenkins-docker-pipelines/</link><pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate><guid>https://antonyderham.me/post/jenkins-docker-pipelines/</guid><description>Purpose For a while, I’ve used Drone CI to build my own projects at home. Drone provides a CI platform that uses Docker at it’s core to provide environments for build steps. This eliminates the need for any dependencies to be installed on the agents that are running the builds and provides a clean-room for each step of the build, and each build after it. For each stage in the pipeline, the platform pulls a Docker image, stands up an instance, binds the workspace, runs the commands in the pipeline definition, then tears down the container and begins the next step.</description></item></channel></rss>